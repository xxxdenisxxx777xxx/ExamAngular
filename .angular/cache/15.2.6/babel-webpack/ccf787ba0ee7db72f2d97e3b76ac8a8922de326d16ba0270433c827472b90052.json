{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../shared.service\";\n// API KEY - dqkcRdxWDtowGDln9oe8pmtkouFh7kBdL5uUP1sh\nexport class EpicComponent {\n  constructor(http, sharedService) {\n    this.http = http;\n    this.sharedService = sharedService;\n    this.currentIndex = 0;\n    this.day = 5;\n    this.photos = [];\n    this.urls = [];\n  }\n  ngOnInit() {\n    this.http.get(`https://api.nasa.gov/EPIC/api/natural/date/2019-05-30?api_key=${this.sharedService.key}`).subscribe(data => {\n      console.log(data);\n      let temp = JSON.stringify(data);\n      this.nasa = JSON.parse(temp);\n      this.loadPhotos();\n    });\n  }\n  loadPhotos() {\n    this.nasa.forEach(item => {\n      let year = parseInt(item.date.split('-')[0]);\n      let month = parseInt(item.date.split('-')[1]);\n      let day = parseInt(item.date.split('-')[2]);\n      const apiUrl = 'https://epic.gsfc.nasa.gov/archive/natural/' + year + '/0' + month + '/' + day + '/png/' + item.image + \".png\";\n      this.photos.push(apiUrl);\n    });\n  }\n  nextImage() {\n    this.currentIndex++;\n  }\n  lastImage() {\n    this.currentIndex--;\n  }\n}\nEpicComponent.ɵfac = function EpicComponent_Factory(t) {\n  return new (t || EpicComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SharedService));\n};\nEpicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EpicComponent,\n  selectors: [[\"app-epic\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"clickbutton-wrapper\"], [1, \"text\"], [\"alt\", \"Image\", \"id\", \"pictures\", 3, \"src\"]],\n  template: function EpicComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"img\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.nasa[ctx.currentIndex].caption);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.nasa[ctx.currentIndex].date);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.photos[ctx.currentIndex], i0.ɵɵsanitizeUrl);\n    }\n  },\n  styles: [\".clickbutton-wrapper[_ngcontent-%COMP%] {\\n    width: 100%;\\n    text-align: center;\\n  }\\n  \\n  .clickbutton[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border-radius: 5px;\\n    border: none;\\n    color: #fff;\\n    font-weight: bold;\\n    height: 700px;\\n    width: 35px;\\n    display: inline-block;\\n  }\\n  .container[_ngcontent-%COMP%] {\\n    position: relative;\\n  }\\n  \\n  .text[_ngcontent-%COMP%] {\\n    margin-left: 35px;\\n    margin-right: 35px;\\n  }\\n  \\n  #pictures[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    max-width: 40%;\\n    height: auto;\\n    margin: 0 auto;\\n    border-radius: 15%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvRVBJQy9lcGljLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkVBQUU7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztJQUNYLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsV0FBVztJQUNYLHFCQUFxQjtFQUN2QjtFQUNBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsWUFBWTtJQUNaLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIgIC5jbGlja2J1dHRvbi13cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5jbGlja2J1dHRvbiB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGhlaWdodDogNzAwcHg7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIC5jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICBcbiAgLnRleHQge1xuICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xuICAgIG1hcmdpbi1yaWdodDogMzVweDtcbiAgfVxuICBcbiAgI3BpY3R1cmVzIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1JTtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;AAGA;AAOA,OAAM,MAAOA,aAAa;EAOxBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;IALpD,iBAAY,GAAW,CAAC;IAExB,QAAG,GAAW,CAAC;IACf,WAAM,GAAa,EAAE;IAG1B,IAAI,CAACC,IAAI,GAAG,EAAE;EAChB;EACAC,QAAQ;IACN,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,iEAAiE,IAAI,CAACH,aAAa,CAACI,GAAG,EAAE,CAAC,CACrGC,SAAS,CAACC,IAAI,IAAG;MAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAIG,IAAI,GAAWC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;MACvC,IAAI,CAACM,IAAI,GAAGF,IAAI,CAACG,KAAK,CAACJ,IAAI,CAAC;MAC5B,IAAI,CAACK,UAAU,EAAE;IACnB,CAAC,CAAC;EACN;EACAA,UAAU;IACR,IAAI,CAACF,IAAI,CAACG,OAAO,CAAEC,IAAI,IAAI;MACzB,IAAIC,IAAI,GAAWC,QAAQ,CAACF,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACpD,IAAIC,KAAK,GAAWH,QAAQ,CAACF,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,IAAIE,GAAG,GAAWJ,QAAQ,CAACF,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACnD,MAAMG,MAAM,GAAG,6CAA6C,GAAGN,IAAI,GAAG,IAAI,GAAGI,KAAK,GAAG,GAAG,GAAGC,GAAG,GAAG,OAAO,GAAGN,IAAI,CAACQ,KAAK,GAAG,MAAM;MAE9H,IAAI,CAACC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC;IAE1B,CAAC,CAAC;EACJ;EAEOI,SAAS;IACd,IAAI,CAACC,YAAY,EAAE;EACrB;EACOC,SAAS;IACd,IAAI,CAACD,YAAY,EAAE;EACrB;;AApCW/B,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,8BAAuB;MAEAA,YAA8B;MAAAA,iBAAI;MACnDA,4BAAgB;MAAAA,YAA2B;MAAAA,iBAAI;MAC/CA,yBAA4D;MAC9DA,iBAAM;;;MAHaA,eAA8B;MAA9BA,wDAA8B;MAC/BA,eAA2B;MAA3BA,qDAA2B;MACtCA,eAA4B;MAA5BA,oEAA4B","names":["EpicComponent","constructor","http","sharedService","urls","ngOnInit","get","key","subscribe","data","console","log","temp","JSON","stringify","nasa","parse","loadPhotos","forEach","item","year","parseInt","date","split","month","day","apiUrl","image","photos","push","nextImage","currentIndex","lastImage","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/miroshnicheenko/Documents/GitHub/ExamAngular/src/app/EPIC/epic.component.ts","/Users/miroshnicheenko/Documents/GitHub/ExamAngular/src/app/EPIC/epic.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '../shared.service';\n// API KEY - dqkcRdxWDtowGDln9oe8pmtkouFh7kBdL5uUP1sh\n\n@Component({\n  selector: 'app-epic',\n  templateUrl: './epic.component.html',\n  styleUrls: ['./epic.component.css']\n})\nexport class EpicComponent {\n  public nasa!: MyObject[];\n  public currentIndex: number = 0;\n  public urls!: string[];\n  public day: number = 5;\n  public photos: string[] = [];\n\n  constructor(private http: HttpClient, private sharedService: SharedService) {\n    this.urls = [];\n  }\n  ngOnInit() {\n    this.http.get(`https://api.nasa.gov/EPIC/api/natural/date/2019-05-30?api_key=${this.sharedService.key}`)\n      .subscribe(data => {\n        console.log(data)\n        let temp: string = JSON.stringify(data);\n        this.nasa = JSON.parse(temp);\n        this.loadPhotos();\n      });\n  }\n  loadPhotos() {\n    this.nasa.forEach((item) => {\n      let year: number = parseInt(item.date.split('-')[0]);\n      let month: number = parseInt(item.date.split('-')[1]);\n      let day: number = parseInt(item.date.split('-')[2]);\n      const apiUrl = 'https://epic.gsfc.nasa.gov/archive/natural/' + year + '/0' + month + '/' + day + '/png/' + item.image + \".png\";\n\n      this.photos.push(apiUrl);\n\n    });\n  }\n\n  public nextImage() {\n    this.currentIndex++;\n  }\n  public lastImage() {\n    this.currentIndex--;\n  }\n}\n\ninterface MyObject {\n  attitude_quaternions: {\n    q0: number;\n    q1: number;\n    q2: number;\n    q3: number;\n  };\n  caption: string;\n  centroid_coordinates: {\n    lat: number;\n    lon: number;\n  };\n  coords: {\n    attitude_quaternions: {\n      q0: number;\n      q1: number;\n      q2: number;\n      q3: number;\n    };\n    centroid_coordinates: {\n      lat: number;\n      lon: number;\n    };\n    dscovr_j2000_position: {\n      x: number;\n      y: number;\n      z: number;\n    };\n    lunar_j2000_position: {\n      x: number;\n      y: number;\n      z: number;\n    };\n    sun_j2000_position: {\n      x: number;\n      y: number;\n      z: number;\n    };\n  };\n  date: string;\n  dscovr_j2000_position: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  identifier: string;\n  image: string;\n  lunar_j2000_position: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  sun_j2000_position: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  version: string;\n}\n\ninterface Photo {\n  url: string;\n}","<div class=\"container\">\n    <div class=\"clickbutton-wrapper\">\n      <p class=\"text\" >{{nasa[currentIndex].caption}}</p>\n      <p class=\"text\">{{nasa[currentIndex].date}}</p>\n      <img [src]=\"photos[currentIndex]\" alt=\"Image\" id=\"pictures\">    \n    </div>\n  </div>\n "]},"metadata":{},"sourceType":"module","externalDependencies":[]}