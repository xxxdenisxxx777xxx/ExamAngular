{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../shared.service\";\nimport * as i3 from \"@angular/common\";\nfunction EarthComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const url_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", url_r1, i0.ɵɵsanitizeUrl);\n  }\n}\n// API KEY - 4O7kxB74PxdUdOoK17f0pcqLZn4kJAmUDJrWYgbt\nexport class EarthComponent {\n  constructor(http, sharedService) {\n    this.http = http;\n    this.sharedService = sharedService;\n    this.currentIndex = 0;\n    this.day = 1;\n    this.urls = [];\n  }\n  ngOnInit() {\n    this.http.get(`https://api.nasa.gov/planetary/earth/assets?lon=-95.33&lat=29.78&date=2020-${this.day}-11&&dim=0.10&api_key=${this.sharedService.key}`).subscribe(data => {\n      let temp = JSON.stringify(data);\n      this.nasa = JSON.parse(temp);\n    });\n  }\n  nextImage() {\n    this.day++;\n    this.http.get(`https://api.nasa.gov/planetary/earth/assets?lon=-95.33&lat=29.78&date=2020-${this.day}-11&&dim=0.10&api_key=${this.sharedService.key}`).subscribe(data => {\n      console.log(data);\n      let temp = JSON.stringify(data);\n      this.nasa = JSON.parse(temp);\n    });\n  }\n  lastImage() {\n    this.day--;\n    this.http.get(`https://api.nasa.gov/planetary/earth/assets?lon=-95.33&lat=29.78&date=2020-${this.day}-11&&dim=0.10&api_key=${this.sharedService.key}`).subscribe(data => {\n      console.log(data);\n      let temp = JSON.stringify(data);\n      this.nasa = JSON.parse(temp);\n    });\n  }\n}\nEarthComponent.ɵfac = function EarthComponent_Factory(t) {\n  return new (t || EarthComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SharedService));\n};\nEarthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EarthComponent,\n  selectors: [[\"app-earth\"]],\n  decls: 8,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"clickbutton-wrapper\"], [1, \"text\"], [\"alt\", \"Image\", \"id\", \"pictures\", 3, \"src\"], [4, \"ngFor\", \"ngForOf\"], [3, \"src\"]],\n  template: function EarthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"img\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, EarthComponent_p_7_Template, 2, 1, \"p\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.nasa.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.nasa.date);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.nasa.url, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.urls);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\".clickbutton-wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  text-align: center;\\n}\\n\\n.clickbutton[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border-radius: 5px;\\n  border: none;\\n  color: #fff;\\n  font-weight: bold;\\n  height: 700px;\\n  width: 35px;\\n  display: inline-block;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n.text[_ngcontent-%COMP%] {\\n  margin-left: 35px;\\n  margin-right: 35px;\\n}\\n\\n#pictures[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  width: auto;\\n  height: auto;\\n  margin: 0 auto;\\n  max-width: 40%;\\n  max-height: 1080px;\\n  border-radius: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvRWFydGgvZWFydGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYixXQUFXO0VBQ1gscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGNBQWM7RUFDZCxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGtCQUFrQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5jbGlja2J1dHRvbi13cmFwcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmNsaWNrYnV0dG9uIHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgaGVpZ2h0OiA3MDBweDtcbiAgd2lkdGg6IDM1cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnRleHQge1xuICBtYXJnaW4tbGVmdDogMzVweDtcbiAgbWFyZ2luLXJpZ2h0OiAzNXB4O1xufVxuXG4jcGljdHVyZXMge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDQwJTtcbiAgbWF4LWhlaWdodDogMTA4MHB4O1xuICBib3JkZXItcmFkaXVzOiAxMCU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAQEA,yBAA4B;IAAAA,yBAAiB;IAAAA,iBAAI;;;;IAAhBA,eAAW;IAAXA,8CAAW;;;ACL9C;AAOA,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;IAJpD,iBAAY,GAAW,CAAC;IAExB,QAAG,GAAW,CAAC;IAGpB,IAAI,CAACC,IAAI,GAAG,EAAE;EAChB;EACAC,QAAQ;IACN,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,8EAA8E,IAAI,CAACC,GAAG,yBAAyB,IAAI,CAACJ,aAAa,CAACK,GAAG,EAAE,CAAC,CACnJC,SAAS,CAACC,IAAI,IAAG;MAEhB,IAAIC,IAAI,GAAWC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;MACvC,IAAI,CAACI,IAAI,GAAGF,IAAI,CAACG,KAAK,CAACJ,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN;EAEOK,SAAS;IACd,IAAI,CAACT,GAAG,EAAE;IACV,IAAI,CAACL,IAAI,CAACI,GAAG,CAAC,8EAA8E,IAAI,CAACC,GAAG,yBAAyB,IAAI,CAACJ,aAAa,CAACK,GAAG,EAAE,CAAC,CACnJC,SAAS,CAACC,IAAI,IAAG;MAChBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjB,IAAIC,IAAI,GAAWC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;MACvC,IAAI,CAACI,IAAI,GAAGF,IAAI,CAACG,KAAK,CAACJ,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN;EAEOQ,SAAS;IACd,IAAI,CAACZ,GAAG,EAAE;IACV,IAAI,CAACL,IAAI,CAACI,GAAG,CAAC,8EAA8E,IAAI,CAACC,GAAG,yBAAyB,IAAI,CAACJ,aAAa,CAACK,GAAG,EAAE,CAAC,CACnJC,SAAS,CAACC,IAAI,IAAG;MAChBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;MACjB,IAAIC,IAAI,GAAWC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;MACvC,IAAI,CAACI,IAAI,GAAGF,IAAI,CAACG,KAAK,CAACJ,IAAI,CAAC;IAC9B,CAAC,CAAC;EACN;;AApCWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV3BzB,8BAAuB;MAEAA,YAAW;MAAAA,iBAAI;MAChCA,4BAAgB;MAAAA,YAAa;MAAAA,iBAAI;MACjCA,yBAAgD;MAElDA,iBAAM;MAERA,2DAAiD;;;MAN5BA,eAAW;MAAXA,iCAAW;MACZA,eAAa;MAAbA,mCAAa;MACxBA,eAAgB;MAAhBA,oDAAgB;MAINA,eAAO;MAAPA,kCAAO","names":["i0","EarthComponent","constructor","http","sharedService","urls","ngOnInit","get","day","key","subscribe","data","temp","JSON","stringify","nasa","parse","nextImage","console","log","lastImage","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/miroshnicheenko/Documents/GitHub/ExamAngular/src/app/Earth/earth.component.html","/Users/miroshnicheenko/Documents/GitHub/ExamAngular/src/app/Earth/earth.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"clickbutton-wrapper\">\n      <p class=\"text\" >{{nasa.id}}</p>\n      <p class=\"text\">{{nasa.date}}</p>\n      <img [src]=\"nasa.url\" alt=\"Image\" id=\"pictures\">\n      \n    </div>\n  </div>\n  <p *ngFor=\"let url of urls\"><img [src]=\"url\"></p>","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '../shared.service';\n// API KEY - 4O7kxB74PxdUdOoK17f0pcqLZn4kJAmUDJrWYgbt\n\n@Component({\n  selector: 'app-earth',\n  templateUrl: './earth.component.html',\n  styleUrls: ['./earth.component.css']\n})\nexport class EarthComponent {\n  public nasa!: ImageResponse;\n  public currentIndex: number = 0;\n  public urls!: string[];\n  public day: number = 1;\n\n  constructor(private http: HttpClient, private sharedService: SharedService) {\n    this.urls = [];\n  }\n  ngOnInit() {\n    this.http.get(`https://api.nasa.gov/planetary/earth/assets?lon=-95.33&lat=29.78&date=2020-${this.day}-11&&dim=0.10&api_key=${this.sharedService.key}`)\n      .subscribe(data => {\n\n        let temp: string = JSON.stringify(data);\n        this.nasa = JSON.parse(temp);\n      });\n  }\n\n  public nextImage() {\n    this.day++;\n    this.http.get(`https://api.nasa.gov/planetary/earth/assets?lon=-95.33&lat=29.78&date=2020-${this.day}-11&&dim=0.10&api_key=${this.sharedService.key}`)\n      .subscribe(data => {\n        console.log(data);\n        let temp: string = JSON.stringify(data);\n        this.nasa = JSON.parse(temp);\n      });\n  }\n\n  public lastImage() {\n    this.day--;\n    this.http.get(`https://api.nasa.gov/planetary/earth/assets?lon=-95.33&lat=29.78&date=2020-${this.day}-11&&dim=0.10&api_key=${this.sharedService.key}`)\n      .subscribe(data => {\n        console.log(data);\n        let temp: string = JSON.stringify(data);\n        this.nasa = JSON.parse(temp);\n      });\n  }\n}\n\ninterface ImageResponse {\n  date: string;\n  id: string;\n  resource: {\n    dataset: string;\n    planet: string;\n  };\n  service_version: string;\n  url: string;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}