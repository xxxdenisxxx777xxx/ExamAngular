{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../shared.service\";\nimport * as i3 from \"@angular/common\";\nfunction ApodComponent_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵelement(1, \"img\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const url_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", url_r1, i0.ɵɵsanitizeUrl);\n  }\n}\n// API KEY - 4O7kxB74PxdUdOoK17f0pcqLZn4kJAmUDJrWYgbt\nexport class ApodComponent {\n  constructor(http, sharedService) {\n    this.http = http;\n    this.sharedService = sharedService;\n    this.currentIndex = 0;\n    this.componentOpened = false;\n    this.urls = [];\n  }\n  ngOnInit() {\n    this.http.get(`https://api.nasa.gov/planetary/apod?api_key=${this.sharedService.key}&count=100`).subscribe(data => {\n      let temp = JSON.stringify(data);\n      this.nasa = JSON.parse(temp);\n    });\n  }\n  nextImage() {\n    this.urls = [];\n    if (this.currentIndex < this.nasa.length - 1) {\n      this.currentIndex++;\n    } else {\n      this.currentIndex = 0;\n    }\n  }\n  lastImage() {\n    this.urls = [];\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    } else {\n      this.currentIndex = this.nasa.length;\n    }\n  }\n  showCopyright() {\n    this.urls = [];\n    this.nasa.forEach(element => {\n      if (element.copyright == this.nasa[this.currentIndex].copyright) {\n        this.urls.push(element.hdurl);\n      }\n    });\n  }\n}\nApodComponent.ɵfac = function ApodComponent_Factory(t) {\n  return new (t || ApodComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.SharedService));\n};\nApodComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ApodComponent,\n  selectors: [[\"app-apod\"]],\n  decls: 10,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"clickbutton-wrapper\"], [1, \"text\", 3, \"click\"], [1, \"text\"], [\"alt\", \"Image\", \"id\", \"pictures\", 3, \"src\"], [4, \"ngFor\", \"ngForOf\"], [3, \"src\"]],\n  template: function ApodComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\", 2);\n      i0.ɵɵlistener(\"click\", function ApodComponent_Template_p_click_2_listener() {\n        return ctx.showCopyright();\n      });\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 3);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"p\", 3);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"img\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(9, ApodComponent_p_9_Template, 2, 1, \"p\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.nasa[ctx.currentIndex].copyright);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.nasa[ctx.currentIndex].date);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.nasa[ctx.currentIndex].explanation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.nasa[ctx.currentIndex].hdurl, i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.urls);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\".clickbutton-wrapper[_ngcontent-%COMP%] {\\n    width: 100%;\\n    text-align: center;\\n  }\\n  \\n  .clickbutton[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border-radius: 5px;\\n    border: none;\\n    color: #fff;\\n    font-weight: bold;\\n    height: 700px;\\n    width: 35px;\\n    display: inline-block;\\n  }\\n  .container[_ngcontent-%COMP%] {\\n    position: relative;\\n  }\\n  \\n  .text[_ngcontent-%COMP%] {\\n    margin-left: 35px;\\n    margin-right: 35px;\\n  }\\n  \\n  #pictures[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    max-width: 40%;\\n    height: auto;\\n    margin: 0 auto;\\n    border-radius: 15%;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQXBvZC9hcG9kLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkVBQUU7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osV0FBVztJQUNYLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2IsV0FBVztJQUNYLHFCQUFxQjtFQUN2QjtFQUNBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLHFCQUFxQjtJQUNyQixjQUFjO0lBQ2QsWUFBWTtJQUNaLGNBQWM7SUFDZCxrQkFBa0I7RUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyIgIC5jbGlja2J1dHRvbi13cmFwcGVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gIC5jbGlja2J1dHRvbiB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGhlaWdodDogNzAwcHg7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIC5jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICBcbiAgLnRleHQge1xuICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xuICAgIG1hcmdpbi1yaWdodDogMzVweDtcbiAgfVxuICBcbiAgI3BpY3R1cmVzIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWF4LXdpZHRoOiA0MCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1JTtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport class Nasa {\n  constructor(c, d, ex, hdr, media, serv, title, url) {\n    this.copyright = c;\n    this.date = d;\n    this.explanation = ex;\n    this.hdurl = hdr;\n    this.media_type = media;\n    this.service_version = serv;\n    this.title = title;\n    this.url = url;\n  }\n}","map":{"version":3,"mappings":";;;;;;IAWEA,yBAA4B;IAAAA,yBAAiB;IAAAA,iBAAI;;;;IAAhBA,eAAW;IAAXA,8CAAW;;;ACR9C;AAMA,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,SAAI,GAAJD,IAAI;IAAsB,kBAAa,GAAbC,aAAa;IAJpD,iBAAY,GAAW,CAAC;IAExB,oBAAe,GAAY,KAAK;IAGrC,IAAI,CAACC,IAAI,GAAG,EAAE;EAChB;EACAC,QAAQ;IACN,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,+CAA+C,IAAI,CAACH,aAAa,CAACI,GAAG,YAAY,CAAC,CAC7FC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAIC,IAAI,GAAWC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;MACvC,IAAI,CAACI,IAAI,GAAGF,IAAI,CAACG,KAAK,CAACJ,IAAI,CAAC;IAC9B,CAAC,CAAC;EAEN;EAEOK,SAAS;IACd,IAAI,CAACX,IAAI,GAAG,EAAE;IAEd,IAAI,IAAI,CAACY,YAAY,GAAG,IAAI,CAACH,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;MAC5C,IAAI,CAACD,YAAY,EAAE;KACpB,MAAM;MACL,IAAI,CAACA,YAAY,GAAG,CAAC;;EAGzB;EACOE,SAAS;IACd,IAAI,CAACd,IAAI,GAAG,EAAE;IAEd,IAAI,IAAI,CAACY,YAAY,GAAG,CAAC,EAAE;MACzB,IAAI,CAACA,YAAY,EAAE;KACpB,MAAM;MACL,IAAI,CAACA,YAAY,GAAG,IAAI,CAACH,IAAI,CAACI,MAAM;;EAExC;EACOE,aAAa;IAClB,IAAI,CAACf,IAAI,GAAG,EAAE;IACd,IAAI,CAACS,IAAI,CAACO,OAAO,CAACC,OAAO,IAAG;MAC1B,IAAIA,OAAO,CAACC,SAAS,IAAI,IAAI,CAACT,IAAI,CAAC,IAAI,CAACG,YAAY,CAAC,CAACM,SAAS,EAAE;QAC/D,IAAI,CAAClB,IAAI,CAACmB,IAAI,CAACF,OAAO,CAACG,KAAK,CAAC;;IAEjC,CAAC,CAAC;EACJ;;AA5CWxB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT1B9B,8BAAuB;MAGDA;QAAA,OAAS+B,mBAAe;MAAA,EAAC;MAAC/B,YAAgC;MAAAA,iBAAI;MAC9EA,4BAAgB;MAAAA,YAA2B;MAAAA,iBAAI;MAC/CA,4BAAgB;MAAAA,YAAkC;MAAAA,iBAAI;MACtDA,yBAAgE;MAClEA,iBAAM;MAIRA,0DAAiD;;;MARHA,eAAgC;MAAhCA,0DAAgC;MAC1DA,eAA2B;MAA3BA,qDAA2B;MAC3BA,eAAkC;MAAlCA,4DAAkC;MAC7CA,eAAgC;MAAhCA,wEAAgC;MAKtBA,eAAO;MAAPA,kCAAO;;;;;;AC6C5B,OAAM,MAAOgC,IAAI;EAUf9B,YAAY+B,CAAS,EAAEC,CAAS,EAAEC,EAAU,EAAEC,GAAW,EAAEC,KAAa,EAAEC,IAAY,EAAEC,KAAa,EAAEC,GAAW;IAChH,IAAI,CAACjB,SAAS,GAAGU,CAAC;IAClB,IAAI,CAACQ,IAAI,GAAGP,CAAC;IACb,IAAI,CAACQ,WAAW,GAAGP,EAAE;IACrB,IAAI,CAACV,KAAK,GAAGW,GAAG;IAChB,IAAI,CAACO,UAAU,GAAGN,KAAK;IACvB,IAAI,CAACO,eAAe,GAAGN,IAAI;IAC3B,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB","names":["i0","ApodComponent","constructor","http","sharedService","urls","ngOnInit","get","key","subscribe","data","temp","JSON","stringify","nasa","parse","nextImage","currentIndex","length","lastImage","showCopyright","forEach","element","copyright","push","hdurl","selectors","decls","vars","consts","template","ctx","Nasa","c","d","ex","hdr","media","serv","title","url","date","explanation","media_type","service_version"],"sourceRoot":"","sources":["/Users/miroshnicheenko/Documents/GitHub/ExamAngular/src/app/Apod/apod.component.html","/Users/miroshnicheenko/Documents/GitHub/ExamAngular/src/app/Apod/apod.component.ts"],"sourcesContent":["<div class=\"container\">\n\n    <div class=\"clickbutton-wrapper\">\n      <p class=\"text\" (click)=\"showCopyright()\">{{nasa[currentIndex].copyright}}</p>\n      <p class=\"text\">{{nasa[currentIndex].date}}</p>\n      <p class=\"text\">{{nasa[currentIndex].explanation}}</p>\n      <img [src]=\"nasa[currentIndex].hdurl\" alt=\"Image\" id=\"pictures\">\n    </div>\n\n  </div>\n  \n  <p *ngFor=\"let url of urls\"><img [src]=\"url\"></p>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from '../shared.service';\n// API KEY - 4O7kxB74PxdUdOoK17f0pcqLZn4kJAmUDJrWYgbt\n@Component({\n  selector: 'app-apod',\n  templateUrl: './apod.component.html',\n  styleUrls: ['./apod.component.css']\n})\nexport class ApodComponent {\n  public nasa!: Nasa[];\n  public currentIndex: number = 0;\n  public urls!: string[];\n  public componentOpened: boolean = false;\n\n  constructor(private http: HttpClient, private sharedService: SharedService) {\n    this.urls = [];\n  }\n  ngOnInit() {\n    this.http.get(`https://api.nasa.gov/planetary/apod?api_key=${this.sharedService.key}&count=100`)\n      .subscribe(data => {\n        let temp: string = JSON.stringify(data);\n        this.nasa = JSON.parse(temp);\n      });\n\n  }\n\n  public nextImage() {\n    this.urls = [];\n\n    if (this.currentIndex < this.nasa.length - 1) {\n      this.currentIndex++;\n    } else {\n      this.currentIndex = 0;\n    }\n\n  }\n  public lastImage() {\n    this.urls = [];\n\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    } else {\n      this.currentIndex = this.nasa.length;\n    }\n  }\n  public showCopyright() {\n    this.urls = [];\n    this.nasa.forEach(element => {\n      if (element.copyright == this.nasa[this.currentIndex].copyright) {\n        this.urls.push(element.hdurl);\n      }\n    });\n  }\n}\n\nexport class Nasa {\n  public copyright: string;\n  public date: string;\n  public explanation: string;\n  public hdurl: string;\n  public media_type: string;\n  public service_version: string;\n  public title: string;\n  public url: string;\n\n  constructor(c: string, d: string, ex: string, hdr: string, media: string, serv: string, title: string, url: string) {\n    this.copyright = c;\n    this.date = d;\n    this.explanation = ex;\n    this.hdurl = hdr;\n    this.media_type = media;\n    this.service_version = serv;\n    this.title = title;\n    this.url = url;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}